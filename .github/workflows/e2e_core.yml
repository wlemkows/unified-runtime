name: E2E build & run

on:
  # this workflow can by only triggered by other workflows
  # for example by: e2e_cuda.yml or e2e_opencl.yml
  workflow_call:
    # acceptable input from adapter-specific workflows
    inputs:
      name:
        type: string
        required: true
      str_name:
        type: string
        required: true
      prefix:
        type: string
        required: true
      config:
        type: string
        required: true
      unit:
        type: string
        required: true
      runner_tag:
        type: string
        required: true

permissions:
  contents: read
  pull-requests: write

jobs:
  e2e-build-hw:
    name: Build SYCL, UR, run E2E
    strategy:
      matrix:
        adapter: [
          {name: "${{inputs.name}}",
          str_name: "${{inputs.str_name}}",
          prefix: "${{inputs.prefix}}",
          config: "${{inputs.config}}",
          unit: "${{inputs.unit}}"}
        ]
        build_type: [Release]
        compiler: [{c: clang, cxx: clang++}]

    runs-on: ${{inputs.runner_tag}}

    steps:
    # Workspace on self-hosted runners is not cleaned automatically.
    # We have to delete the files created outside of using actions.
    - name: Cleanup self-hosted workspace
      if: always()
      run: |
        ls -la ./
        rm -rf ./* || true

    - uses: xt0rted/pull-request-comment-branch@d97294d304604fa98a2600a6e2f916a84b596dc7 # v2.0.0
      id: comment-branch

    - name: Checkout UR
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        path: ur-repo

    - name: Checkout SYCL
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        repository: intel/llvm
        ref: sycl
        path: sycl-repo

    - name: Install pip packages
      working-directory: ${{github.workspace}}/ur-repo
      run: pip install -r third_party/requirements.txt

    - name: Add comment to PR
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      if: always()
      with:
        script: |
          const name = '${{ github.workflow }}';
          const adapter = '${{ matrix.adapter.name }}';
          const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
          const success = '${{ job.status }}' === 'success';
          const body = `${name}: E2E ${adapter} ${success ? 'succeeded' : 'failed'}\n${url}`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          })

    - name: Configure CMake UR
      working-directory: ${{github.workspace}}/ur-repo
      run: >
        cmake
        -B build
        -DCMAKE_C_COMPILER=${{matrix.compiler.c}}
        -DCMAKE_CXX_COMPILER=${{matrix.compiler.cxx}}
        -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
        -DUR_ENABLE_TRACING=ON
        -DUR_DEVELOPER_MODE=ON
        -DUR_BUILD_ADAPTER_${{matrix.adapter.name}}=ON

    - name: Build UR
      run: LD_LIBRARY_PATH=${{github.workspace}}/dpcpp_compiler/lib
        cmake --build ${{github.workspace}}/ur-repo/build -j $(nproc)

    - name: Set prefer UR
      run: echo "SYCL_PREFER_UR=1" >> $GITHUB_ENV

    - name: Set CUDA env vars
      if: matrix.adapter.name == 'CUDA'
      run: |
        echo "CUDA_LIB_PATH=/usr/local/cuda/lib64/stubs" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=/usr/local/cuda/compat/:/usr/local/cuda/lib64:$LD_LIBRARY_PATH" >> $GITHUB_ENV

    - name: Run pre setup
      run: |
        source /opt/intel/oneapi/setvars.sh --force
        sycl-ls
